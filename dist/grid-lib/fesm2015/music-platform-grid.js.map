{"version":3,"file":"music-platform-grid.js","sources":["../projects/grid-lib/src/lib/model/grid.ts","../projects/grid-lib/src/lib/service/grid.Service.ts","../projects/grid-lib/src/lib/service/grid-factory.service.ts","../projects/grid-lib/src/lib/service/grid-actions-notifier.ts","../projects/grid-lib/src/lib/model/sortorder.type.ts","../esm2015/projects/grid-lib/src/lib/grid/header-table-cell/header-table-cell.component.html","../esm2015/projects/grid-lib/src/lib/grid/header-table-cell/header-table-cell.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/text-column/text-column.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/text-column/text-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/boolean-column/boolean-column.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/boolean-column/boolean-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/image-column/image-column.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/image-column/image-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/icon-column/icon-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/icon-column/icon-column.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/custom-column/custom-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/custom-column/custom-column.component.ts","../projects/grid-lib/src/lib/pipes/date-format.pipe.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/date-column/date-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/date-column/date-column.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/status-column/status-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/status-column/status-column.component.ts","../projects/grid-lib/src/lib/pipes/action-class.pipe.ts","../projects/grid-lib/src/lib/pipes/row-change-name.pipe.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/action-column/action-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/action-column/action-column.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/link-column/link-column.component.ts","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/link-column/link-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/read-more-column/read-more-column.component.html","../esm2015/lib/projects/grid-lib/src/lib/grid/columns-type/read-more-column/read-more-column.component.ts","../projects/grid-lib/src/lib/pipes/row-class-callback.pipe.ts","../projects/grid-lib/src/lib/pipes/nested-json.pipe.ts","../projects/grid-lib/src/lib/grid/grid.component.ts","../projects/grid-lib/src/lib/grid/grid.component.html","../projects/grid-lib/src/lib/pipes/Sort-grid.pipe.ts","../projects/grid-lib/src/lib/pipes/pagination.pipe.ts","../projects/grid-lib/src/lib/model/simpleSearch.ts","../projects/grid-lib/src/lib/directive/debounce-click.directive.ts","../projects/grid-lib/src/lib/search/search.component.ts","../projects/grid-lib/src/lib/search/search.component.html","../../projects/grid-lib/src/lib/grid.module.ts","../../../projects/grid-lib/src/public-api.ts","../../../projects/grid-lib/src/music-platform-grid.ts"],"sourcesContent":["import {Column} from './column';\nimport {SimpleSearch} from './simpleSearch';\nimport {Pagination} from './pagination';\n/**\n * Column:array of columns\n * modelType:we need model for get data from grid service\n * baseUrl: is api base url\n * simpleSearch: grid can have simple search so we need som config for it\n * rowClassCallback it access to all row data to check it of we need and add custom class for each tr\n *\n */\nexport class Grid {\n  public columns: Column[] = [];\n  public modelType = '';\n  public baseUrl = '';\n  public relativeGetMethodUrl = '';\n  public page = 1;\n  public pagination!: Pagination;\n  public simpleSearch!: SimpleSearch;\n  public rowClassCallback?: (row: any) => string | string[] | Set<string> | { [klass: string]: any; };\n  public defaultSort?: DefaultSortConfig;\n  public noDataMessage = 'There is no data.';\n}\n\nexport interface DefaultSortConfig {\n  sortDir: string;\n  sortColumn: string;\n}\n","import {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nexport class GridService<Tin, Tout> {\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   *\n   * @param apiAddress\n   * @param params\n   */\n  getData(apiAddress: string, params: HttpParams): Observable<Tout> {\n    return this.http.get<Tout>(apiAddress, {params});\n  }\n\n  /**\n   *\n   * @param apiAddress\n   * @param body\n   */\n  postData(apiAddress: string, body: Tin): Observable<Tout> {\n    return this.http.post<Tout>(apiAddress, body);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {GridService} from './grid.Service';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({providedIn: 'root'})\nexport class GridFactoryService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   *\n   * @param resourceName\n   * @constructor\n   */\n  CreateGridService(resourceName: string): any {\n      return new GridService<any, any>(this.http);\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {filter, map} from \"rxjs/operators\";\n\ninterface BroadcastEvent {\n  key: any;\n  data?: any;\n}\n\n@Injectable({providedIn: 'root'})\n\nexport class GridActionsNotifier {\n  private broadcastEvent = new Subject<BroadcastEvent>();\n\n  broadcast(key: any, data?: any) {\n    this.broadcastEvent.next({key, data});\n  }\n\n  ListenOn<T>(key: any): Observable<T> {\n    return this.broadcastEvent.asObservable()\n      .pipe(\n        filter(event => event.key === key),\n        map(event => <T>event.data)\n      );\n  }\n}\n","export enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n  withoutSort = 'withoutSort'\n}\n","<ng-container *ngFor=\"let tHead of theadLabel;let index=index\">\n  <!--start :thead-->\n  <th *ngIf=\"tHead!=='';else disableHeader\">\n    <div (click)=\"onSortClick(index)\"\n         #sortingList\n         class=\"d-flex\"\n         [ngClass]=\"{'sorting-start': isSortingStart && isSortingStart[index]}\">\n      <div class=\"mr-auto  title-header\">\n        {{tHead}}\n      </div>\n      <ng-container *ngTemplateOutlet=\"sortingIcon;\n                      context:{index:index,sortableStatus:this.theadSortConfig[index]['sortable'],\n                      sortColumnValue:this.theadSortConfig[index]['value']}\"></ng-container>\n    </div>\n  </th>\n  <ng-template #disableHeader>\n    <th class=\"disable-header\"></th>\n  </ng-template>\n  <!--end :thead-->\n</ng-container>\n\n<!--start:sort icon template-->\n<ng-template #sortingIcon let-index=\"index\" let-sortableStatus=\"sortableStatus\" let-sortColumnValue=\"sortColumnValue\">\n  <ng-container *ngIf=\"sortableStatus!==false\">\n    <div class=\"filter-box\">\n      <!--start:we have situation to have default sort and icon must be based on config-->\n      <ng-container *ngIf=\"defaultSort && (sortColumnValue=== defaultSort.sortColumn);else haveNoDefault\">\n        <i class=\"filter-icon fal\"\n           [ngClass]=\"defaultSort.sortDir===sortDir?'fa-long-arrow-down':'fa-long-arrow-up'\"></i>\n      </ng-container>\n      <!--end:we have situation to have default sort and icon must be based on config-->\n      <!--start:we dont have default sort-->\n      <ng-template #haveNoDefault>\n        <i class=\"filter-icon fal fa-sort-alt\"></i>\n      </ng-template>\n      <!--end:we dont have default sort-->\n    </div>\n  </ng-container>\n</ng-template>\n<!--end:sort icon template-->\n\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport {SortOrder} from '../../model/sortorder.type';\nimport {DefaultSortConfig} from '../../model/grid';\n\n@Component({\n  selector: 'header-table-cell',\n  templateUrl: './header-table-cell.component.html',\n  styleUrls: ['./header-table-cell.component.css']\n})\nexport class HeaderTableCellComponent implements OnInit {\n  @ViewChildren('sortingList') sortingList!: QueryList<any>;\n  @Input() theadLabel: Array<string> = [];\n  @Input() theadSortConfig: Array<any> = [];\n  @Input() defaultSort!: DefaultSortConfig | undefined;\n  @Output() sort: EventEmitter<{ sortDirection: string, column: string }> = new EventEmitter<{ sortDirection: string, column: string }>();\n  // default value for sorting is DEC\n  public sortDir = SortOrder.DESC;\n  public isSortingStart = [];\n\n  ngOnInit(): void {\n    if (this.defaultSort) {\n      this.sort.emit({sortDirection: this.defaultSort.sortDir, column: this.defaultSort.sortColumn});\n    }\n  }\n  onSortClick(index: number): void {\n    // TODO :default value must be have sorting-start class\n    // Todo : class name must be set by user\n    // we need to have array of sorting element\n    const sortingList = this.sortingList.toArray();\n    // we have disableHeader, in sortingList we dont count disable one so i need to counting index\n    const disableCount = this.theadLabel.length - sortingList.length;\n    const filterIcon = sortingList[index - disableCount].nativeElement.querySelector('.filter-icon');\n    // we have situation to disable sorting so we need to check filterIcon\n    if (filterIcon) {\n      const filterIconClassList = filterIcon.classList;\n      if (filterIconClassList.contains('fa-sort-alt')) {\n        // @ts-ignore\n        this.isSortingStart[index] = true;\n        this.sortDir = SortOrder.DESC;\n        filterIconClassList.remove('fa-sort-alt');\n        filterIconClassList.add('fa-long-arrow-down');\n      } else if (filterIconClassList.contains('fa-long-arrow-down')) {\n        // @ts-ignore\n        this.isSortingStart[index] = true;\n        this.sortDir = SortOrder.ASC;\n        filterIconClassList.remove('fa-long-arrow-down');\n        filterIconClassList.add('fa-long-arrow-up');\n      } else {\n        // @ts-ignore\n        this.isSortingStart[index] = false;\n        this.sortDir = SortOrder.withoutSort;\n        filterIconClassList.remove('fa-long-arrow-up');\n        filterIconClassList.add('fa-sort-alt');\n      }\n      // we send req with sort eventEmitter\n      this.sort.emit({sortDirection: this.sortDir, column: this.theadSortConfig[index].value});\n    }\n\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'text-column',\n  templateUrl: './text-column.component.html',\n  styleUrls: ['./text-column.component.css']\n})\nexport class TextColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span>\n    {{value}}\n</span>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'boolean-column',\n  templateUrl: './boolean-column.component.html',\n  styleUrls: ['./boolean-column.component.css']\n})\nexport class BooleanColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span>{{value}}</span>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'image-column',\n  templateUrl: './image-column.component.html',\n  styleUrls: ['./image-column.component.css']\n})\nexport class ImageColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n  public styles: any = {};\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n\n  }\n\n}\n","<img src=\"{{value}}\"\n     alt=\"{{row.alt}}\"\n     class=\"img-thumbnail {{'float-'+row.float}}\"\n     [ngClass]=\"row.customClass?row.customClass:''\"\n     [ngStyle]=\"{'max-width.px':row.maxWidth}\"\n>\n","<ng-container *ngFor=\"let icon of row.icons\">\n  <span class=\"mr-2\"\n        [ngClass]=\"icon.customClass\"\n        [tooltip]=\"icon.tooltip.tooltipText\"\n        [delay]=\"icon.tooltip.delay\"\n        [isDisabled]=\"icon.tooltip.isDisabled\"\n        [tooltipAnimation]=\"icon.tooltip.tooltipAnimation\"\n        [placement]=\"icon.tooltip.hasOwnProperty('placement')?icon.tooltip.placement:'top'\"\n  >\n     <i  [ngClass]=\"icon.icon\" [ngStyle]=\"{'color':icon.color}\">{{icon.name}}</i>\n  </span>\n</ng-container>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'icon-column',\n  templateUrl: './icon-column.component.html',\n  styleUrls: ['./icon-column.component.css']\n})\nexport class IconColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container\n  *ngTemplateOutlet=\"row.customTemplate;\n  context:{ value: value,row: row,column:column }\">\n</ng-container>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'custom-column',\n  templateUrl: './custom-column.component.html',\n  styleUrls: ['./custom-column.component.css']\n})\n\nexport class CustomColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n  @Input('column') column: any;\n  constructor() { }\n\n  ngOnInit(): void {\n\n\n  }\n\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport * as moment from 'moment';\n@Pipe({\n  name: 'dateFormat',\n})\nexport class DateFormatPipe implements PipeTransform {\n\n  transform(data: any,format: string): any {\n    return moment(data).format(format);\n  }\n\n}\n","<span>\n    <!--built in pipe-->\n  <ng-container *ngIf=\"row.pipeFormat==pipeFormat.date;else moment\">\n  {{value|date:row.dateFormat}}\n  </ng-container>\n  <!--custom pipe-->\n  <ng-template #moment>\n     {{value|dateFormat:row.dateFormat}}\n  </ng-template>\n</span>\n","import {Component, Input, OnInit} from '@angular/core';\n\nenum pipeFormatEnum {\n  date = \"date\",\n  Moment = \"Moment\"\n}\n\n@Component({\n  selector: 'date-column',\n  templateUrl: './date-column.component.html',\n  styleUrls: ['./date-column.component.css']\n})\nexport class DateColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * @method  access to enum data\n   */\n  public get pipeFormat(): typeof pipeFormatEnum {\n    return pipeFormatEnum;\n  }\n}\n","<span [ngStyle]=\"{'color':row.color}\">\n  <i [ngClass]=\"row.icon\"></i>\n    <ng-container [ngSwitch]=\"value\">\n      <span *ngSwitchCase=statusState.active>Active</span>\n      <span *ngSwitchCase=statusState.inactive>Inactive</span>\n      <span *ngSwitchCase=statusState.inProgress>In progress</span>\n    </ng-container>\n</span>\n","import {Component, Input, OnInit} from '@angular/core';\n\nenum statusState {\n  active = 1,\n  inactive = 0,\n  inProgress = 2\n}\n\n@Component({\n  selector: 'status-column',\n  templateUrl: './status-column.component.html',\n  styleUrls: ['./status-column.component.css']\n})\nexport class StatusColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * @method access to enum data\n   */\n  public get statusState(): typeof statusState {\n    return statusState;\n  }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n  name: 'actionBtnClass',\n})\nexport class ActionClassPipe implements PipeTransform {\n\n  transform(data: any): any {\n    if (data.hasOwnProperty('margin')) {\n      return 'm' + data.margin;\n    } else if (data.hasOwnProperty('marginRight')) {\n      return 'mr-' + data.marginRight;\n    } else if (data.hasOwnProperty('marginLeft')){\n      return 'ml-' + data.marginLeft;\n    }\n\n  }\n\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n  name: 'rowChangeName',\n})\nexport class RowChangeNamePipe implements PipeTransform {\n\n  transform(rowData: any, value: any): any {\n    if (typeof (value) !== \"string\")\n      return value(rowData);\n       return value\n  }\n\n}\n","<!--wrap-->\n<div class=\"{{'text-'+row.position}}\">\n  <!--button-->\n  <ng-container *ngIf=\"row.buttonItems\">\n         <span *ngFor=\"let action of row.buttonItems\">\n             <!--normal-->\n          <ng-container *ngIf=\"!action.customTemplate\">\n              <!--dropDown-->\n            <ng-container *ngIf=\"action.buttonType==buttonType.DropDownButton;else simpleButton\">\n              <span class=\"btn-group\" dropdown>\n                <button id=\"button-basic\"\n                        dropdownToggle\n                        type=\"button\"\n                        [ngStyle]=\"{'padding': row.buttonPadding}\"\n                        [ngClass]=\"action|actionBtnClass\"\n                        class=\"btn dropdown-toggle {{action.customClass}}\"\n                        aria-controls=\"dropdown-custom-html\">\n                   <i *ngIf=\"action.dropDownIcon\" class=\"{{action.dropDownIcon}}\"></i>\n                  {{action.name}}\n                  <span class=\"caret\"></span>\n                </button>\n                  <ul id=\"dropdown-basic\" *dropdownMenu class=\"dropdown-menu\"\n                      role=\"menu\" aria-labelledby=\"button-basic\">\n                      <ng-container *ngFor=\"let dropDownOption of action.dropDownItems;let index=index\">\n                         <li role=\"menuitem\">\n                           <a class=\"dropdown-item\"\n                              [ngClass]=\"dropDownOption.customClass\"\n                              (click)=\"dropDownOption.onclick(column)\">\n                               <i *ngIf=\"dropDownOption.icon\" class=\"{{column|rowChangeName:dropDownOption.icon}}\"></i>\n                             {{column|rowChangeName:dropDownOption.name}}\n                           </a>\n                         </li>\n                         <div *ngIf=\"dropDownOption.dropdownDivider\" class=\"dropdown-divider\"></div>\n                      </ng-container>\n                  </ul>\n                  </span>\n            </ng-container>\n            <!--simpleButton-->\n             <ng-template #simpleButton>\n             <button class=\"btn\"\n                     [tooltip]=\"action.tooltip?action.tooltip.tooltipText:''\"\n                     [placement]=\"action.tooltip?action.tooltip.placement:''\"\n                     [delay]=\"action.tooltip?action.tooltip.delay:''\"\n                     [ngStyle]=\"{'padding': row.buttonPadding}\"\n                     [isDisabled]=\"action.tooltip?action.tooltip.isDisabled:''\"\n                     [tooltipAnimation]=\"action.tooltip?action.tooltip.tooltipAnimation:''\"\n                     [class]=\"action|actionBtnClass\"\n                     [ngClass]=\"action.customClass\"\n                     (click)=\"action.onclick(column)\">\n                 <span *ngIf=\"action.classCallback(column)\" [class]=\"action.classCallback(column)\"></span>\n              <i *ngIf=\"action.icon\" [ngClass]=\"action.icon\"></i>\n              <span *ngIf=\"action.name\"> {{action.name}}</span>\n              </button>\n             </ng-template>\n          </ng-container>\n           <!--custom template-->\n         \t<ng-container *ngIf=\"action.customTemplate\" [ngTemplateOutlet]=\"action.customTemplate\"\n                        [ngTemplateOutletContext]=\"{row:column}\">\n\t\t\t\t\t</ng-container>\n        </span>\n  </ng-container>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\nexport enum buttonTypeEnum {\n  DropDownButton = 'DropDownButton',\n  simpleButton = 'simpleButton'\n}\n\n@Component({\n  selector: 'action-column',\n  templateUrl: './action-column.component.html',\n  styleUrls: ['./action-column.component.css']\n})\nexport class ActionColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n  @Input('column') column: any;\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n  /**\n   *  @method  access to enum data\n   */\n  public get buttonType(): typeof buttonTypeEnum {\n    return buttonTypeEnum;\n  }\n\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'link-column',\n  templateUrl: './link-column.component.html',\n  styleUrls: ['./link-column.component.css']\n})\nexport class LinkColumnComponent implements OnInit {\n  @Input('value') value: any;\n  @Input('row') row: any;\n  @Input('column') column: any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span (click)=\"row.onclick(column)\">\n  {{value}}\n</span>\n","<a (click)=\"triggerCollapsed(column.id)\"\n   role=\"button\"\n   aria-expanded=\"false\"\n   [ngClass]=\"row.btnClass?row.btnClass:''\"\n   aria-controls=\"collapseExample\">\n  <i *ngIf=\"row.iconName\"\n     class=\"read-more-icon\"\n     [ngClass]=\"[row.iconName?row.iconName:'',addClass?'rotate':'']\"></i>\n  <span *ngIf=\"row.btnName\">{{row.btnName}}</span>\n</a>\n\n\n\n","import {Component, EventEmitter, Input, Output, TemplateRef, ViewChild} from '@angular/core';\nimport {GridFactoryService} from \"../../../service/grid-factory.service\";\nimport {take} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'read-more-column',\n  templateUrl: './read-more-column.component.html',\n  styleUrls: ['./read-more-column.component.css']\n})\nexport class ReadMoreColumnComponent {\n  @Input('value') value: any;\n  @Input('row') row: any;\n  @Input('column') column: any;\n\n  @Output() readMoreData = new EventEmitter<any>();\n  @Output() collapsedNotifier = new EventEmitter<any>();\n  addClass: boolean = false;\n  isCollapsed = [];\n  cloneDataObservable!: Observable<any> | undefined;\n\n\n  @ViewChild('readMoreTemplate', {static: true}) readMoreTemplate!: TemplateRef<any>;\n\n  constructor(private gridFactoryService: GridFactoryService) {\n\n  }\n\n  /**\n   * call read more service\n   */\n  generateReadMoreService() {\n    /**\n     * we have to send request just in first time in other situation we must just toggle\n     */\n    this.cloneDataObservable = undefined;\n    let url = `${this.row.url}`;\n    url = url.replace('{{value}}', this.value);\n    let service = this.gridFactoryService.CreateGridService(this.row.modelType);\n    /**\n     * http service generator\n     */\n    service.getData(url).pipe(take(1)).subscribe((res: any) => {\n      this.cloneDataObservable = res;\n      this.readMoreData.emit({data: res, id: this.value, tableConfig: this.row.tableConfig});\n    });\n  }\n\n  /**\n   * it trigger collapsed and emit it to grid component to show and hide data\n   * @param id {number}- which item click\n   */\n  triggerCollapsed(id: number) {\n    this.addClass = !this.addClass;\n    // if first time we must send request else we just collapsed\n    if (this.cloneDataObservable === undefined && this.isCollapsed[id] == undefined) {\n      this.generateReadMoreService();\n    }\n    this.collapsedNotifier.emit({id: id, state: !this.isCollapsed[id]});\n    // @ts-ignore\n    this.isCollapsed[id] = !this.isCollapsed[id];\n  }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n  name: 'RowClassCallback',\n})\nexport class RowClassCallbackPipe implements PipeTransform {\n\n  transform(rowData: any, value: any): any {\n    if (value) {\n      const cssClass = value(rowData);\n      return cssClass;\n    }\n  }\n\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport * as _ from \"lodash\";\n\n@Pipe({\n  name: 'nestedJson',\n})\nexport class NestedJsonPipe implements PipeTransform {\n\n  transform(data: any,value:any): any {\n  return _.get(data, value);\n  }\n\n}\n","// angular basic\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\n// internal import\nimport {GridFactoryService} from '../service/grid-factory.service';\nimport {Grid} from '../model/grid';\nimport {GridActionsNotifier} from '../service/grid-actions-notifier';\nimport {BehaviorSubject, empty, Subscription} from 'rxjs';\nimport {NgbPagination} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {GridService} from '../service/grid.Service';\nimport {switchMap} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'lib-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() grid: Grid = new Grid();\n  @Input() refreshGrid = new BehaviorSubject<boolean>(false);\n  @ViewChild('paginator', {static: true}) paginator!: NgbPagination;\n  // general\n  public subscription: Subscription = new Subscription();\n  // read only\n  readonly firstPage = 1;\n  readonly defaultItemsPerPage = 10;\n  readonly withoutSort = 'withoutSort';\n\n  public tHeadLabels: Array<string> = [];\n  public tHeadSortConfig: Array<{}> = [];\n  public columnData: any[] = [];\n  public rows = new BehaviorSubject<any>([]);\n  public gridService: GridService<HttpClient, void>;\n  // read more\n  public readMoreValue = [];\n  public readMoreHeader = [];\n  public readMoreHtml!: HTMLElement;\n  public isCollapsed = [];\n  // loading\n  public dataLoading = new BehaviorSubject<boolean>(false);\n  // pagination\n  public page: number = this.firstPage;\n  public pageSize = this.defaultItemsPerPage;\n  public totalNumberOfData!: number;\n  public numberOfDataStart!: number;\n  public numberOfDataEnd!: number;\n  private viewContainerRef!: ViewContainerRef;\n  private requestUrl = '';\n  private params = new HttpParams();\n  private requestSubject$ = new BehaviorSubject<boolean>(false);\n\n  constructor(private gridFactoryService: GridFactoryService,\n              private gridActionsNotifier: GridActionsNotifier,\n              private cdRef: ChangeDetectorRef,\n              viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n    this.gridService = this.gridFactoryService.CreateGridService(this.grid.modelType);\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n  ngOnInit(): void {\n    this.pageSize = this.grid.pagination.itemsPerPage;\n    this.requestUrl = `${this.grid.baseUrl}/${this.grid.relativeGetMethodUrl}`;\n    this.setColumns();\n    // in page load we dont need sort so make service call without sorting\n    if (!this.grid.defaultSort) {\n      this.makeGridService(this.page, this.pageSize);\n    }\n    this.simpleSearch();\n    this.refreshGrid.subscribe((res: boolean) => {\n      if (res) {\n        this.makeGridService(this.page, this.pageSize);\n        this.refreshGrid.next(false);\n      }\n    });\n    this.subscription.add(\n      this.requestSubject$.pipe(\n        switchMap((res) => {\n          if (res) {\n            return this.gridService.getData(this.requestUrl, this.params);\n          }\n          return empty();\n        })\n      ).subscribe((res) => {\n        this.bindGrid(res);\n      })\n    );\n\n  }\n\n  /**\n   * this method should bind grid we have different situation to bind grid for example search pagination and...\n   * so we have method get\n   * @param gridRows(data)\n   * and fill variable we need\n   */\n  bindGrid(gridRows: any): void {\n    /**\n     * @method markForCheck its for ChangeDetectionStrategy OnPush\n     */\n    this.cdRef.markForCheck();\n    this.rows.next(gridRows.hasOwnProperty('data') ? gridRows.data : gridRows);\n    this.totalNumberOfData = gridRows.totalItems;\n    this.calcPaginationAmount();\n    this.dataLoading.next(true);\n  }\n\n\n  /**\n   * gridFactoryService decide and generate grid service\n   * @param page which page we are on in\n   * @param itemsPerPage count of item in each page\n   * @param sortDir if we call sorting function then we have sortDir\n   * included sortDirection (it contain ASC, DESC and withoutSort)\n   * and column which is column name we must sort base on in\n   */\n  makeGridService(page?: number, itemsPerPage?: number, sortDir?: any): void {\n    // this part using for pagination\n    this.params = this.params.set('page', page + '').set('itemsPerPage', itemsPerPage + '');\n    // this part using for sorting\n    if (sortDir && sortDir.column) {\n      if (sortDir.sortDirection === this.withoutSort) {\n        this.params = this.params.delete(`order[${sortDir.column}]`);\n      } else {\n        this.params = this.params.set(`order[${sortDir.column}]`, sortDir.sortDirection + '');\n      }\n    }\n    // this part call request\n    this.requestSubject$.next(true);\n  }\n\n  /**\n   * if we have simple search\n   * gridActionsNotifier listen and if some changes happened return new data\n   * getSimpleSearch is my new service\n   *\n   */\n  simpleSearch(): void {\n    if (this.grid.simpleSearch) {\n      this.subscription.add(\n        this.gridActionsNotifier.ListenOn<string>('simpleSearch').subscribe(res => {\n          this.params = this.params.set(this.grid.simpleSearch.queryParamName, res);\n          this.page = 1;\n          this.params = this.params.set('page', '1');\n          this.requestSubject$.next(true);\n        }));\n    }\n  }\n\n  /**\n   *\n   * @param data read more column event emitter\n   */\n  showReadMore(data: any): void {\n    this.readMoreHtml = document.createElement('td');\n    this.readMoreHtml.setAttribute('class', 'append-table');\n    this.readMoreHtml.setAttribute('colspan', `${(this.grid != undefined\n      && this.grid.columns != undefined\n      && this.grid.columns.length ? this.grid.columns.length : 1)}`\n    );\n    this.readMoreValue = [];\n    this.readMoreHeader = [];\n    // get element which we have id\n    let readMoreHtmlElement!: HTMLElement | null;\n    readMoreHtmlElement = document.getElementById('read-more' + data.id);\n    // we have loop in config and then make html\n    // read more column tables config have 3 property header value and template\n    this.createDataFromTableConfig(data);\n    // here we must create table dynamically\n    // we need one div and it must have id and class then we must append it to read more Html field\n    const div = this.htmlGenerator('div', 'child_data_local_1', 'datatable datatable-default  datatable-scroll datatable-loaded');\n    this.readMoreHtml.appendChild(div);\n    // we need one table and it must have class then div element we make before must append it\n    const table = this.htmlGenerator('table', null, 'datatable-table table');\n    div.appendChild(table);\n    // we need one thead and it must have class then table element we make before must append it\n    const thead = this.htmlGenerator('thead', null, 'datatable-head');\n    table.appendChild(thead);\n    // we need one tr and it must have class then thead element we make before must append it\n    const trHead = this.htmlGenerator('tr', 'null', 'datatable-row');\n    thead.appendChild(trHead);\n    // we need make td dynamically and last tr must append it (it makes header of table )\n\n    this.readMoreHeader.forEach(header => {\n      const tdHead = this.htmlGenerator('th', null, null);\n      trHead.appendChild(tdHead);\n      tdHead.innerText = header;\n    });\n\n    // we need one tbody and it must have class then table must append it\n    const tabBody = this.htmlGenerator('tbody', null, 'datatable-body');\n    table.appendChild(tabBody);\n    // we need one tr and it must have class then  tBody  must append it\n    const tBodyRow = this.htmlGenerator('tr', null, 'datatable-row');\n    tabBody.appendChild(tBodyRow);\n    // we need make td dynamically and last tr must append it (it makes value tr of table )\n    this.readMoreValue.forEach(rowItem => {\n      // @ts-ignore\n      if (rowItem.customTemplate) {\n        // we need make td dynamically and last tr must append it (it makes value tr of table )\n        const td = this.htmlGenerator('td', null, null);\n        tBodyRow.appendChild(td);\n        // we have custom template this part and we need read it from read more config so we need to use createEmbeddedView\n        // we detectChanges it for confidence (it must be safe)\n        // @ts-ignore\n        const embeddedViewRef = this.viewContainerRef.createEmbeddedView(rowItem.customTemplate, {row: data.data});\n        embeddedViewRef.detectChanges();\n        // here we have embeddedViewRef and it can be have more than one node so we need to have for on it\n        for (let i = 0; i < embeddedViewRef.rootNodes.length; i++) {\n          // we have 2 condition here 1-have template 2-dont have (simple value we read simply from req)\n          // here we have template\n          const element = embeddedViewRef.rootNodes[i];\n          td.appendChild(element);\n        }\n      } else {\n        // here dont have template\n        const valueTd = this.htmlGenerator('td', null, null);\n        // @ts-ignore\n        const spanValue = this.htmlGenerator('span', null, null, rowItem.value);\n        tBodyRow.appendChild(valueTd);\n        valueTd.appendChild(spanValue);\n      }\n\n    });\n    // here we append all element we make before before end selected element\n    // @ts-ignore\n    readMoreHtmlElement.insertAdjacentElement('beforeend', this.readMoreHtml);\n  }\n\n  /**\n   *\n   * @param collapsed object{id:number,state:boolean}\n   */\n  triggerCollapsed(collapsed: any): void {\n    // @ts-ignore\n    this.isCollapsed[collapsed.id] = collapsed.state;\n  }\n\n  /**\n   *\n   * @param data\n   */\n  createDataFromTableConfig(data: any): void {\n    data.tableConfig.forEach((i: any) => {\n      // @ts-ignore\n      this.readMoreHeader.push(i.header);\n      // read more value contain value and template\n      // @ts-ignore\n      this.readMoreValue.push({value: data.data[i.value], customTemplate: i.customTemplate});\n    });\n  }\n\n  /**\n   * its need for showReadMore method\n   * @param _elementName tag name\n   * @param _idName if we have id\n   * @param _className if we have class\n   * @param _elementValue if we have value for element\n   */\n  // tslint:disable-next-line:variable-name typedef\n  htmlGenerator(_elementName: any, _idName?: any, _className?: any, _elementValue?: any) {\n    const element = document.createElement(_elementName);\n    if (_idName !== null) {\n      element.setAttribute('id', _idName);\n    }\n    if (_className !== null) {\n      element.setAttribute('class', _className);\n    }\n    if (_elementValue) {\n      element.innerText = _elementValue;\n    }\n    return element;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   *\n   * @param pageNumber page number\n   * calcPaginationAmount\n   */\n  changePage(pageNumber: number): void {\n    this.page = pageNumber;\n    this.makeGridService(this.page, this.pageSize);\n    this.calcPaginationAmount();\n  }\n\n  /***\n   * its calculate which data is active now from .. to...\n   */\n  calcPaginationAmount(): void {\n    this.numberOfDataStart = (this.page - 1) * this.pageSize + 1;\n    this.numberOfDataEnd = (this.page - 1) * this.pageSize + this.pageSize;\n    if (this.numberOfDataEnd > this.totalNumberOfData) {\n      this.numberOfDataEnd = this.totalNumberOfData;\n    }\n  }\n\n  /**\n   * setColumns\n   * headerTableCells and each row data\n   * we have array @type string\n   * it make header and row data with grid @Input\n   */\n  private setColumns(): void {\n    // headerTableCells have to keep all thead name which is label und user set it in grid config\n    this.tHeadLabels = [];\n    // tHeadSortConfig have to keep all thead value (database name :)) and sortable status\n    this.tHeadSortConfig = [];\n    // we use value and fill table with columnData\n    this.columnData = [];\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this.grid.columns.length; i++) {\n      this.columnData.push(Object.assign({}, this.grid.columns[i]));\n      // disableHeaderTableCell is little bit tricky :) we can disable thead and we can hide it from user so\n      // when we have this property we add empty value in array\n      // @ts-ignore\n      this.tHeadLabels.push((this.grid.columns[i].disableHeaderTableCell) ? '' : this.grid.columns[i].headerTableCell);\n      this.tHeadSortConfig.push({\n        value: this.grid.columns[i].sortableName ? this.grid.columns[i].sortableName : this.grid.columns[i].value,\n        sortable: this.grid.columns[i].sortAble\n      });\n    }\n  }\n\n  /**\n   *\n   * @param sortDirectionConfig included sortDirection (it contain ASC, DESC and withoutSort)\n   * and column which is column name we must sort base on in\n   */\n  sorting(sortDirectionConfig: any): void {\n    this.makeGridService(this.page, this.pageSize, sortDirectionConfig);\n  }\n}\n\n\n","<!-- begin:Table -->\n<div class=\"angular-bootstrap-table\">\n  <div class=\"table-box table-responsive\">\n    <table class=\"table table-head-custom table-vertical-center table-striped\">\n      <!--begin:header-->\n      <thead>\n      <header-table-cell [theadSortConfig]=\"tHeadSortConfig\"\n                         [defaultSort]=\"grid.defaultSort\"\n                         [theadLabel]=\"tHeadLabels\"\n                         (sort)=\"sorting($event)\"\n      ></header-table-cell>\n      </thead>\n      <!--end:header-->\n      <tbody>\n      <!--row-->\n      <ng-container *ngIf=\"dataLoading.value && rows.value.length>0;else noData\">\n        <ng-container *ngFor=\"let rowItems of rows | async;let index=index\">\n          <tr [ngClass]=\"rowItems|RowClassCallback:grid.rowClassCallback\">\n            <td *ngFor=\"let rowItem of columnData\">\n              <ng-container *ngTemplateOutlet=\"ColumnTemplate;\n                              context:{value:rowItems|nestedJson:rowItem.value,row:rowItem,column:rowItems}\"></ng-container>\n            </td>\n          </tr>\n          <!--collapsed red More context-->\n          <tr [ngbCollapse]=\"!isCollapsed[rowItems['id']]\"\n              [id]=\"rowItems&&rowItems['id']?'read-more'+rowItems['id']:''\"></tr>\n        </ng-container>\n      </ng-container>\n      <!-- when we have no data-->\n      <ng-template #noData>\n        <div class=\"no-data text-center p-5\">\n          <div class=\"spinner-border text-primary\" role=\"status\" *ngIf=\"!dataLoading.value\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n          <p *ngIf=\"rows.value.length==0 && dataLoading.value\">\n            {{grid.noDataMessage}}\n          </p>\n        </div>\n      </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <!-- end: Table -->\n  <div class=\"pagination-box\">\n    <!-- begin:pagination -->\n    <ng-container *ngIf=\"dataLoading.value &&\n                         grid.pagination &&\n                          rows.value.length!==0\">\n      <div class=\"d-flex mt-2\">\n        <div class=\"mr-auto datatable-pager\">\n          <ngb-pagination [collectionSize]=\"totalNumberOfData\"\n                          [(page)]=\"page\"\n                          #paginator\n                          [pageSize]=\"pageSize\"\n                          [maxSize]=\"grid.pagination.maxSize?grid.pagination.maxSize:5\"\n                          [rotate]=\"grid.pagination.rotate?grid.pagination.rotate:true\"\n                          [boundaryLinks]=\"grid.pagination.boundaryLinks?grid.pagination.boundaryLinks:false\"\n                          (pageChange)=\"changePage($event)\">\n          </ngb-pagination>\n        </div>\n        <!-- begin:pagination item per page selector -->\n        <div class=\"select-pagination\">\n          <ng-container *ngIf=\"grid.pagination.itemPerPageSelectorOption\n               && grid.pagination.itemPerPageSelectorOption.length>0\">\n            <ng-select [items]=\"grid.pagination.itemPerPageSelectorOption\"\n                       bindLabel=\"name\"\n                       [searchable]=\"false\"\n                       [clearable]=\"false\"\n                       (change)=\"changePage(firstPage)\"\n                       placeholder=\"Select city\"\n                       [(ngModel)]=\"pageSize\">\n            </ng-select>\n          </ng-container>\n        </div>\n        <!-- end:pagination item per page selector -->\n        <!-- begin:data information -->\n        <div class=\"ml-2 mt-1 paginate-detail\">\n        <span *ngIf=\"!grid.pagination.hasOwnProperty('disableNumberOfData') || !grid.pagination.disableNumberOfData\"\n              class=\"pagination-data-info\">{{'Showing ' + numberOfDataStart + ' - ' + numberOfDataEnd + ' of ' + totalNumberOfData}}</span>\n        </div>\n        <!-- end:data information -->\n      </div>\n    </ng-container>\n    <!-- end:pagination -->\n  </div>\n</div>\n<!--start:columnTemplate -->\n<ng-template #ColumnTemplate let-row=\"row\" let-value=\"value\" let-column=\"column\">\n  <ng-container [ngSwitch]=\"row.type\">\n    <text-column *ngSwitchCase=\"'Text'\" [value]=\"value\" [row]=\"row\"></text-column>\n    <boolean-column *ngSwitchCase=\"'Boolean'\" [value]=\"value\" [row]=\"row\"></boolean-column>\n    <image-column *ngSwitchCase=\"'Image'\" [value]=\"value\" [row]=\"row\"></image-column>\n    <icon-column *ngSwitchCase=\"'Icon'\" [value]=\"value\" [row]=\"row\"></icon-column>\n    <custom-column *ngSwitchCase=\"'Custom'\" [value]=\"value\" [row]=\"row\" [column]=\"column\"></custom-column>\n    <date-column *ngSwitchCase=\"'Date'\" [value]=\"value\" [row]=\"row\"></date-column>\n    <status-column *ngSwitchCase=\"'Status'\" [value]=\"value\" [row]=\"row\"></status-column>\n    <action-column *ngSwitchCase=\"'Action'\" [value]=\"value\" [row]=\"row\" [column]=\"column\"></action-column>\n    <link-column *ngSwitchCase=\"'Link'\" [value]=\"value\" [row]=\"row\" [column]=\"column\"></link-column>\n    <read-more-column *ngSwitchCase=\"'ReadMore'\" [value]=\"value\" [column]=\"column\" [row]=\"row\"\n                      (readMoreData)=\"showReadMore($event)\"\n                      (collapsedNotifier)=\"this.triggerCollapsed($event)\"\n    ></read-more-column>\n  </ng-container>\n</ng-template>\n<!--  end: columnTemplate -->\n\n","import {Pipe, PipeTransform} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'SortGridPipe',\n\n})\nexport class SortGridPipe implements PipeTransform {\n  transform(data: any, direction: string, name: string): any {\n    return true;\n   // return _.orderBy(data, [name], [direction == 'asc' ? 'asc' : 'desc']);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'pagination',\n})\n\nexport class PaginationPipe implements PipeTransform {\n  transform(data: any, currentPage: number, pageSize: number): any {\n    return[...data.slice(pageSize * (currentPage), pageSize * (currentPage + 1))];\n  }\n\n}\n\n\n","export class SimpleSearch {\n  public queryParamName!: string;\n  public active!: boolean;\n}\nexport class SimpleSearchConfig {\n  public placeHolder!: string;\n  public inputLabel!: string;\n  public haveButton!:boolean;\n  public icon!:string;\n  public iconCustomClass!:string;\n  public buttonCustomClass!:string;\n  public buttonName!:string;\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\n@Directive({\n  selector: '[appDebounceClick]'\n})\nexport class DebounceClickDirective implements OnInit, OnDestroy {\n  @Input()\n  debounceTime = 500;\n\n  @Output()\n  debounceClick = new EventEmitter();\n\n  private clicks = new Subject();\n  private subscription: Subscription = new Subscription();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.subscription = this.clicks.pipe(\n      debounceTime(this.debounceTime),\n    ).subscribe(e => this.debounceClick.emit(e));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  clickEvent(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.clicks.next(event);\n  }\n}\n","//angular basic\nimport {Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\n// internal import\nimport {GridActionsNotifier} from \"../service/grid-actions-notifier\";\nimport {SimpleSearchConfig} from \"../model/simpleSearch\";\n//rxjs import\nimport {debounce, distinctUntilChanged, filter, map} from \"rxjs/operators\";\nimport {fromEvent, Subscription, timer} from \"rxjs\";\n\n@Component({\n  selector: 'lib-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n  @Input('search') search: SimpleSearchConfig = new SimpleSearchConfig();\n  @ViewChild('simpleSearchInput', {static: true}) simpleSearchInput!: ElementRef;\n  public searchModel: any;\n  public subscription: Subscription = new Subscription();\n\n  constructor(private gridActionsNotifier: GridActionsNotifier) {\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    if (!this.search.haveButton) {\n      this.subscription = fromEvent(this.simpleSearchInput && this.simpleSearchInput.nativeElement, 'keyup').pipe(\n        // Time in milliseconds between key events\n        // @ts-ignore\n        debounce((event: KeyboardEvent) => {\n          if (event.key !== 'Enter') {\n            return timer(1000);\n          }\n          return timer(0);\n        }),\n        // get value\n        map((event: any) => {\n          /**\n           * here we check event.target.value if it is empty or length <2 we must return clone of last data\n           */\n          return event.target.value;\n        })\n        // if character length greater then 2\n        , filter((res => res.length == 0 || res.length > 2))\n        // If previous query is different from current\n        , distinctUntilChanged()\n        // subscription for response\n      ).subscribe((text: string) => {\n        // notify data change\n        this.searchCompleteOnButtonPress(text);\n      });\n\n    }\n  }\n\n  /**\n   * this\n   * @param data- its search field value and\n   */\n  searchCompleteOnButtonPress(data: any) {\n    this.gridActionsNotifier.broadcast('simpleSearch', data);\n  }\n}\n","<form>\n  <label *ngIf=\"search.inputLabel\">{{search.inputLabel}}</label>\n  <div class=\"input-group\">\n    <div *ngIf=\"search.icon\"\n         class=\"input-group-prepend\"\n         [ngClass]=\"search.iconCustomClass\">\n    <span class=\"input-group-text\" id=\"inputGroupPrepend\">\n      <i [ngClass]=\"search.icon\"></i>\n    </span>\n    </div>\n    <input id=\"search\"\n           autocomplete=\"off\"\n           class=\"form-control\"\n           name=\"searchModel\"\n           [(ngModel)]=\"searchModel\"\n           [placeholder]=\"search.placeHolder\"\n           aria-describedby=\"inputGroupPrepend\"\n           #simpleSearchInput>\n    <button *ngIf=\"search.haveButton\"\n            type=\"submit\"\n            class=\"btn\"\n            [ngClass]=\"search.buttonCustomClass\"\n            appDebounceClick\n            (debounceClick)=\"searchCompleteOnButtonPress(searchModel)\"\n            [debounceTime]=\"700\"\n            >\n      {{search.buttonName}}\n    </button>\n  </div>\n</form>\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {GridComponent} from \"./grid/grid.component\";\n\nimport {SortGridPipe} from \"./pipes/Sort-grid.pipe\";\nimport {PaginationPipe} from \"./pipes/pagination.pipe\";\nimport {BooleanColumnComponent} from './grid/columns-type/boolean-column/boolean-column.component';\nimport {TextColumnComponent} from './grid/columns-type/text-column/text-column.component';\nimport {ImageColumnComponent} from './grid/columns-type/image-column/image-column.component';\nimport {CustomColumnComponent} from './grid/columns-type/custom-column/custom-column.component';\nimport {NestedJsonPipe} from \"./pipes/nested-json.pipe\";\nimport {IconColumnComponent} from './grid/columns-type/icon-column/icon-column.component';\nimport {ReadMoreColumnComponent} from './grid/columns-type/read-more-column/read-more-column.component';\nimport {SearchComponent} from './search/search.component';\nimport {DateColumnComponent} from './grid/columns-type/date-column/date-column.component';\nimport {DateFormatPipe} from \"./pipes/date-format.pipe\";\nimport {StatusColumnComponent} from './grid/columns-type/status-column/status-column.component';\nimport {ActionColumnComponent} from './grid/columns-type/action-column/action-column.component';\nimport {ActionClassPipe} from './pipes/action-class.pipe';\nimport {LinkColumnComponent} from './grid/columns-type/link-column/link-column.component';\nimport {RowClassCallbackPipe} from \"./pipes/row-class-callback.pipe\";\nimport {RowChangeNamePipe} from \"./pipes/row-change-name.pipe\";\n\n//ngx bootstrap\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\nimport {TooltipModule} from 'ngx-bootstrap/tooltip';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {NgSelectModule} from \"@ng-select/ng-select\";\nimport {DebounceClickDirective} from \"./directive/debounce-click.directive\";\nimport { HeaderTableCellComponent } from './grid/header-table-cell/header-table-cell.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    GridComponent,\n    NestedJsonPipe,\n    SortGridPipe,\n    PaginationPipe,\n    DateFormatPipe,\n    ActionClassPipe,\n    BooleanColumnComponent,\n    TextColumnComponent,\n    ImageColumnComponent,\n    CustomColumnComponent,\n    IconColumnComponent,\n    ReadMoreColumnComponent,\n    SearchComponent,\n    DateColumnComponent,\n    StatusColumnComponent,\n    ActionColumnComponent,\n    LinkColumnComponent,\n    RowClassCallbackPipe,\n    RowChangeNamePipe,\n    DebounceClickDirective,\n    HeaderTableCellComponent\n  ],\n  exports: [\n    GridComponent,\n    SearchComponent,\n  ],\n  imports: [\n    NgbModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BsDropdownModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgSelectModule\n  ]\n})\nexport class GridModule {\n}\n","/*\n * Public API Surface of grid-lib\n */\nexport * from './lib/grid/grid.component'\nexport * from './lib/grid.module';\nexport * from './lib/search/search.component';\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtextInterpolate1","i0.ɵɵelement","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate","i0.ɵɵclassMapInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵclassMap","_.get"],"mappings":"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"}